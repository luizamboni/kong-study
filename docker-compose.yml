version: "3.8"

services:
  kong-database:
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kongpassword}
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
    volumes:
      - kong_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - kong-net

  kong-migrations:
    image: kong:3.5
    command: kong migrations bootstrap
    depends_on:
      kong-database:
        condition: service_healthy
    environment: &kong_env
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kongpassword}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
    restart: "no"
    networks:
      - kong-net

  kong:
    image: kong:3.5
    user: kong
    depends_on:
      kong-migrations:
        condition: service_completed_successfully
      kong-database:
        condition: service_healthy
    environment:
      <<: *kong_env
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_STATUS_LISTEN: 0.0.0.0:8100
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
      - "8100:8100"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - kong-net

  httpbin:
    image: kennethreitz/httpbin
    restart: unless-stopped
    expose:
      - "80"
    networks:
      - kong-net

volumes:
  kong_db_data:

networks:
  kong-net:
    driver: bridge
